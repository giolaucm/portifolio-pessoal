{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nconst useAnimateScroll = () => {\n  _s();\n  useEffect(() => {\n    const animateOnScroll = () => {\n      const elements = document.querySelectorAll('[data-animate]');\n      const windowHeight = window.innerHeight;\n      const windowTop = window.scrollY;\n      const windowBottom = windowTop + windowHeight;\n      elements.forEach(element => {\n        const elementTop = element.getBoundingClientRect().top + windowTop;\n        const elementBottom = elementTop + element.offsetHeight;\n\n        // Verifica se o elemento está na viewport\n        if (elementBottom >= windowTop && elementTop <= windowBottom) {\n          element.classList.add('animated');\n        }\n      });\n    };\n\n    // Adiciona o event listener\n    window.addEventListener('scroll', animateOnScroll);\n    animateOnScroll(); // Executa uma vez no carregamento\n\n    return () => {\n      window.removeEventListener('scroll', animateOnScroll);\n    };\n  }, []);\n};\n_s(useAnimateScroll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useAnimateScroll;","map":{"version":3,"names":["useEffect","useAnimateScroll","_s","animateOnScroll","elements","document","querySelectorAll","windowHeight","window","innerHeight","windowTop","scrollY","windowBottom","forEach","element","elementTop","getBoundingClientRect","top","elementBottom","offsetHeight","classList","add","addEventListener","removeEventListener"],"sources":["C:/Users/a464019/Documents/GitHub/portifolio-pessoal/portifolio-pessoal/src/useScrollAnimation.js"],"sourcesContent":["import { useEffect } from 'react';\r\n\r\nconst useAnimateScroll = () => {\r\n  useEffect(() => {\r\n    const animateOnScroll = () => {\r\n      const elements = document.querySelectorAll('[data-animate]');\r\n      const windowHeight = window.innerHeight;\r\n      const windowTop = window.scrollY;\r\n      const windowBottom = windowTop + windowHeight;\r\n\r\n      elements.forEach((element) => {\r\n        const elementTop = element.getBoundingClientRect().top + windowTop;\r\n        const elementBottom = elementTop + element.offsetHeight;\r\n\r\n        // Verifica se o elemento está na viewport\r\n        if (elementBottom >= windowTop && elementTop <= windowBottom) {\r\n          element.classList.add('animated');\r\n        }\r\n      });\r\n    };\r\n\r\n    // Adiciona o event listener\r\n    window.addEventListener('scroll', animateOnScroll);\r\n    animateOnScroll(); // Executa uma vez no carregamento\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', animateOnScroll);\r\n    };\r\n  }, []);\r\n};\r\n\r\nexport default useAnimateScroll;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7BF,SAAS,CAAC,MAAM;IACd,MAAMG,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,gBAAgB,CAAC;MAC5D,MAAMC,YAAY,GAAGC,MAAM,CAACC,WAAW;MACvC,MAAMC,SAAS,GAAGF,MAAM,CAACG,OAAO;MAChC,MAAMC,YAAY,GAAGF,SAAS,GAAGH,YAAY;MAE7CH,QAAQ,CAACS,OAAO,CAAEC,OAAO,IAAK;QAC5B,MAAMC,UAAU,GAAGD,OAAO,CAACE,qBAAqB,CAAC,CAAC,CAACC,GAAG,GAAGP,SAAS;QAClE,MAAMQ,aAAa,GAAGH,UAAU,GAAGD,OAAO,CAACK,YAAY;;QAEvD;QACA,IAAID,aAAa,IAAIR,SAAS,IAAIK,UAAU,IAAIH,YAAY,EAAE;UAC5DE,OAAO,CAACM,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;QACnC;MACF,CAAC,CAAC;IACJ,CAAC;;IAED;IACAb,MAAM,CAACc,gBAAgB,CAAC,QAAQ,EAAEnB,eAAe,CAAC;IAClDA,eAAe,CAAC,CAAC,CAAC,CAAC;;IAEnB,OAAO,MAAM;MACXK,MAAM,CAACe,mBAAmB,CAAC,QAAQ,EAAEpB,eAAe,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAACD,EAAA,CA3BID,gBAAgB;AA6BtB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}