{"ast":null,"code":"const express = require('express');\nconst nodemailer = require('nodemailer');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nconst app = express();\nconst port = 5000;\n\n// Middleware\napp.use(cors()); // Permitir requisições do frontend\napp.use(bodyParser.json());\n\n// Rota para receber o formulário\napp.post('/send-email', (req, res) => {\n  const {\n    name,\n    email,\n    textarea\n  } = req.body;\n  const transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: 'giolaucm.dev@gmail.com',\n      pass: 'SENHA_DE_APP_AQUI' // Substitua pela senha de app gerada\n    }\n  });\n  const mailOptions = {\n    from: 'giolaucm.dev@gmail.com',\n    to: 'giolaucm.dev@gmail.com',\n    subject: `Mensagem de ${name}`,\n    text: `Nome: ${name}\\nE-mail: ${email}\\nMensagem: ${textarea}`\n  };\n  transporter.sendMail(mailOptions, (error, info) => {\n    if (error) {\n      console.error('Erro ao enviar email:', error);\n      return res.status(500).send('Erro ao enviar o e-mail');\n    }\n    res.status(200).send('Mensagem enviada com sucesso');\n  });\n});\napp.listen(port, () => {\n  console.log(`Servidor rodando na porta ${port}`);\n});","map":{"version":3,"names":["express","require","nodemailer","bodyParser","cors","app","port","use","json","post","req","res","name","email","textarea","body","transporter","createTransport","service","auth","user","pass","mailOptions","from","to","subject","text","sendMail","error","info","console","status","send","listen","log"],"sources":["C:/Users/a464019/Documents/GitHub/portifolio-pessoal/portifolio-pessoal/src/server.js"],"sourcesContent":["const express = require('express');\r\nconst nodemailer = require('nodemailer');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\nconst port = 5000;\r\n\r\n// Middleware\r\napp.use(cors()); // Permitir requisições do frontend\r\napp.use(bodyParser.json());\r\n\r\n// Rota para receber o formulário\r\napp.post('/send-email', (req, res) => {\r\n  const { name, email, textarea } = req.body;\r\n\r\n  const transporter = nodemailer.createTransport({\r\n    service: 'gmail',\r\n    auth: {\r\n      user: 'giolaucm.dev@gmail.com',\r\n      pass: 'SENHA_DE_APP_AQUI', // Substitua pela senha de app gerada\r\n    },\r\n  });\r\n\r\n  const mailOptions = {\r\n    from: 'giolaucm.dev@gmail.com',\r\n    to: 'giolaucm.dev@gmail.com',\r\n    subject: `Mensagem de ${name}`,\r\n    text: `Nome: ${name}\\nE-mail: ${email}\\nMensagem: ${textarea}`,\r\n  };\r\n\r\n  transporter.sendMail(mailOptions, (error, info) => {\r\n    if (error) {\r\n      console.error('Erro ao enviar email:', error);\r\n      return res.status(500).send('Erro ao enviar o e-mail');\r\n    }\r\n    res.status(200).send('Mensagem enviada com sucesso');\r\n  });\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`Servidor rodando na porta ${port}`);\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;AACxC,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMI,GAAG,GAAGL,OAAO,CAAC,CAAC;AACrB,MAAMM,IAAI,GAAG,IAAI;;AAEjB;AACAD,GAAG,CAACE,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACjBC,GAAG,CAACE,GAAG,CAACJ,UAAU,CAACK,IAAI,CAAC,CAAC,CAAC;;AAE1B;AACAH,GAAG,CAACI,IAAI,CAAC,aAAa,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACpC,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGJ,GAAG,CAACK,IAAI;EAE1C,MAAMC,WAAW,GAAGd,UAAU,CAACe,eAAe,CAAC;IAC7CC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;MACJC,IAAI,EAAE,wBAAwB;MAC9BC,IAAI,EAAE,mBAAmB,CAAE;IAC7B;EACF,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAG;IAClBC,IAAI,EAAE,wBAAwB;IAC9BC,EAAE,EAAE,wBAAwB;IAC5BC,OAAO,EAAE,eAAeb,IAAI,EAAE;IAC9Bc,IAAI,EAAE,SAASd,IAAI,aAAaC,KAAK,eAAeC,QAAQ;EAC9D,CAAC;EAEDE,WAAW,CAACW,QAAQ,CAACL,WAAW,EAAE,CAACM,KAAK,EAAEC,IAAI,KAAK;IACjD,IAAID,KAAK,EAAE;MACTE,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAOjB,GAAG,CAACoB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,yBAAyB,CAAC;IACxD;IACArB,GAAG,CAACoB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,8BAA8B,CAAC;EACtD,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF3B,GAAG,CAAC4B,MAAM,CAAC3B,IAAI,EAAE,MAAM;EACrBwB,OAAO,CAACI,GAAG,CAAC,6BAA6B5B,IAAI,EAAE,CAAC;AAClD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}