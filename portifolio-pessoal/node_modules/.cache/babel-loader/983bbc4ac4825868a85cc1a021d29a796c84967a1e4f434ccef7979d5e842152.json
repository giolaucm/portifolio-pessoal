{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a464019\\\\Documents\\\\GitHub\\\\portifolio-pessoal\\\\portifolio-pessoal\\\\src\\\\Routes.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport SobreMim from './pages/sobreMim';\nimport Projetos from './pages/Projetos';\nimport Blog from './pages/blog';\nimport Menu from './componentes/Menu/Menu';\nimport PaginaPadrao from './pages/PaginaPadrao/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AppWithRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction AppWithRouter() {\n  _s();\n  const location = useLocation();\n\n  // Função para definir o background baseado na rota\n  const getBackgroundImage = () => {\n    switch (location.pathname) {\n      case \"/\":\n        return \"url('../../img/background.jpg')\";\n      case \"/projetos\":\n        return \"url('/path/to/projetos-background.jpg')\";\n      case \"/blog\":\n        return \"url('/path/to/blog-background.jpg')\";\n      default:\n        return \"url('/path/to/default-background.jpg')\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: getBackgroundImage(),\n      backgroundSize: 'cover',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(PaginaPadrao, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(SobreMim, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projetos\",\n          element: /*#__PURE__*/_jsxDEV(Projetos, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/blog\",\n          element: /*#__PURE__*/_jsxDEV(Blog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(AppWithRouter, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c2 = AppWithRouter;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWithRouter\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","useLocation","SobreMim","Projetos","Blog","Menu","PaginaPadrao","jsxDEV","_jsxDEV","App","children","AppWithRouter","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","location","getBackgroundImage","pathname","style","backgroundImage","backgroundSize","height","path","element","index","_c2","$RefreshReg$"],"sources":["C:/Users/a464019/Documents/GitHub/portifolio-pessoal/portifolio-pessoal/src/Routes.js"],"sourcesContent":["import { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport SobreMim from './pages/sobreMim';\nimport Projetos from './pages/Projetos';\nimport Blog from './pages/blog';\nimport Menu from './componentes/Menu/Menu';\nimport PaginaPadrao from './pages/PaginaPadrao/index';\n\nfunction App() {\n  return (\n    <Router>\n      <AppWithRouter />\n    </Router>\n  );\n}\n\nfunction AppWithRouter() {\n  const location = useLocation();\n\n  // Função para definir o background baseado na rota\n  const getBackgroundImage = () => {\n    switch (location.pathname) {\n      case \"/\":\n        return \"url('../../img/background.jpg')\";\n      case \"/projetos\":\n        return \"url('/path/to/projetos-background.jpg')\";\n      case \"/blog\":\n        return \"url('/path/to/blog-background.jpg')\";\n      default:\n        return \"url('/path/to/default-background.jpg')\";\n    }\n  };\n\n  return (\n    <div style={{ backgroundImage: getBackgroundImage(), backgroundSize: 'cover', height: '100vh' }}>\n      <Routes>\n        <Route path=\"/\" element={<PaginaPadrao />} >\n          <Route index element={<SobreMim />} />\n          <Route path=\"/projetos\" element={<Projetos />} />\n          <Route path=\"/blog\" element={<Blog />} />\n        </Route>\n        <Route path=\"*\" element={<h1>Not Found</h1>} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}