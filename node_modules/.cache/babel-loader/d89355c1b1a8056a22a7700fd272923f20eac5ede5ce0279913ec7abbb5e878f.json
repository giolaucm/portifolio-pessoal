{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a464019\\\\Documents\\\\GitHub\\\\portifolio-pessoal\\\\src\\\\componentes\\\\forms\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../forms/styles.css\";\nimport Notificacao from \"../alert/index\";\nimport imgCopy from \"../img/not_copy.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const [notificacaoVisivel, setNotificacaoVisivel] = useState(false);\n  const [mensagemNotificacao, setMensagemNotificacao] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.name || !formData.email || !formData.message) {\n      setMensagemNotificacao(\"Por favor, preencha todos os campos\");\n      setNotificacaoVisivel(true);\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const response = await fetch(\"https://formspree.io/f/mldbkkkp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setFormData({\n          name: \"\",\n          email: \"\",\n          message: \"\"\n        });\n        setMensagemNotificacao(\"Mensagem enviada com sucesso!\");\n      } else {\n        var _data$errors, _data$errors$;\n        setMensagemNotificacao(((_data$errors = data.errors) === null || _data$errors === void 0 ? void 0 : (_data$errors$ = _data$errors[0]) === null || _data$errors$ === void 0 ? void 0 : _data$errors$.message) || \"Erro ao enviar mensagem\");\n      }\n    } catch (error) {\n      console.error(\"Erro ao enviar:\", error);\n      setMensagemNotificacao(\"Erro na conexão. Tente mais tarde.\");\n    } finally {\n      setNotificacaoVisivel(true);\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          required: true,\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          required: true,\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Como posso te ajudar?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          id: \"message\",\n          rows: 10,\n          cols: 50,\n          required: true,\n          value: formData.message,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-submit-btn\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: isSubmitting ? \"Enviando...\" : \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notificacao, {\n      visivel: notificacaoVisivel,\n      onFechar: () => setNotificacaoVisivel(false),\n      mensagem: mensagemNotificacao,\n      imagem: imgCopy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"lrpwHPTkPE+RNT+6A3K8PDBxAsQ=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Notificacao","imgCopy","jsxDEV","_jsxDEV","Form","_s","formData","setFormData","name","email","message","notificacaoVisivel","setNotificacaoVisivel","mensagemNotificacao","setMensagemNotificacao","isSubmitting","setIsSubmitting","handleChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","Accept","body","JSON","stringify","data","json","ok","_data$errors","_data$errors$","errors","error","console","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","required","onChange","rows","cols","disabled","visivel","onFechar","mensagem","imagem","_c","$RefreshReg$"],"sources":["C:/Users/a464019/Documents/GitHub/portifolio-pessoal/src/componentes/forms/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../forms/styles.css\";\r\nimport Notificacao from \"../alert/index\";\r\nimport imgCopy from \"../img/not_copy.svg\";\r\n\r\nconst Form = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const [notificacaoVisivel, setNotificacaoVisivel] = useState(false);\r\n  const [mensagemNotificacao, setMensagemNotificacao] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!formData.name || !formData.email || !formData.message) {\r\n      setMensagemNotificacao(\"Por favor, preencha todos os campos\");\r\n      setNotificacaoVisivel(true);\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const response = await fetch(\"https://formspree.io/f/mldbkkkp\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setFormData({ name: \"\", email: \"\", message: \"\" });\r\n        setMensagemNotificacao(\"Mensagem enviada com sucesso!\");\r\n      } else {\r\n        setMensagemNotificacao(\r\n          data.errors?.[0]?.message || \"Erro ao enviar mensagem\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar:\", error);\r\n      setMensagemNotificacao(\"Erro na conexão. Tente mais tarde.\");\r\n    } finally {\r\n      setNotificacaoVisivel(true);\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Nome</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            required\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">E-mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            required\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"message\">Como posso te ajudar?</label>\r\n          <textarea\r\n            name=\"message\"\r\n            id=\"message\"\r\n            rows={10}\r\n            cols={50}\r\n            required\r\n            value={formData.message}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button \r\n          className=\"form-submit-btn\" \r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n        >\r\n          {isSubmitting ? \"Enviando...\" : \"Enviar\"}\r\n        </button>\r\n      </form>\r\n\r\n      <Notificacao\r\n        visivel={notificacaoVisivel}\r\n        onFechar={() => setNotificacaoVisivel(false)}\r\n        mensagem={mensagemNotificacao}\r\n        imagem={imgCopy}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}