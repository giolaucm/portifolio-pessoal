{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n\n  // Validação básica\n  if (!formData.name || !formData.email || !formData.message) {\n    setMensagemNotificacao(\"Por favor, preencha todos os campos\");\n    setNotificacaoVisivel(true);\n    return;\n  }\n  setIsSubmitting(true);\n  try {\n    // CORREÇÃO: Endpoint correto da API\n    const response = await fetch(\"../../api/index\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: formData.name,\n        email: formData.email,\n        message: formData.message\n      })\n    });\n\n    // Verifica se a resposta é JSON válido\n    const text = await response.text();\n    let data;\n    try {\n      data = text ? JSON.parse(text) : {};\n    } catch (e) {\n      console.error(\"Failed to parse JSON:\", text);\n      throw new Error(\"Resposta inválida do servidor\");\n    }\n    if (!response.ok) {\n      throw new Error(data.message || \"Erro ao enviar mensagem\");\n    }\n    setFormData({\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    });\n    setMensagemNotificacao(data.message || \"Mensagem enviada com sucesso!\");\n  } catch (error) {\n    console.error(\"Erro ao enviar:\", error);\n    setMensagemNotificacao(error.message || \"Erro na conexão. Tente mais tarde.\");\n  } finally {\n    setNotificacaoVisivel(true);\n    setIsSubmitting(false);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","formData","name","email","message","setMensagemNotificacao","setNotificacaoVisivel","setIsSubmitting","response","fetch","method","headers","body","JSON","stringify","text","data","parse","console","error","Error","ok","setFormData"],"sources":["C:/Users/a464019/Documents/GitHub/portifolio-pessoal/src/componentes/forms/index.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  \r\n  // Validação básica\r\n  if (!formData.name || !formData.email || !formData.message) {\r\n    setMensagemNotificacao(\"Por favor, preencha todos os campos\");\r\n    setNotificacaoVisivel(true);\r\n    return;\r\n  }\r\n\r\n  setIsSubmitting(true);\r\n\r\n  try {\r\n    // CORREÇÃO: Endpoint correto da API\r\n    const response = await fetch(\"../../api/index\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: formData.name,\r\n        email: formData.email,\r\n        message: formData.message\r\n      }),\r\n    });\r\n\r\n    // Verifica se a resposta é JSON válido\r\n    const text = await response.text();\r\n    let data;\r\n    try {\r\n      data = text ? JSON.parse(text) : {};\r\n    } catch (e) {\r\n      console.error(\"Failed to parse JSON:\", text);\r\n      throw new Error(\"Resposta inválida do servidor\");\r\n    }\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.message || \"Erro ao enviar mensagem\");\r\n    }\r\n\r\n    setFormData({ name: \"\", email: \"\", message: \"\" });\r\n    setMensagemNotificacao(data.message || \"Mensagem enviada com sucesso!\");\r\n  } catch (error) {\r\n    console.error(\"Erro ao enviar:\", error);\r\n    setMensagemNotificacao(\r\n      error.message || \"Erro na conexão. Tente mais tarde.\"\r\n    );\r\n  } finally {\r\n    setNotificacaoVisivel(true);\r\n    setIsSubmitting(false);\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;EAElB;EACA,IAAI,CAACC,QAAQ,CAACC,IAAI,IAAI,CAACD,QAAQ,CAACE,KAAK,IAAI,CAACF,QAAQ,CAACG,OAAO,EAAE;IAC1DC,sBAAsB,CAAC,qCAAqC,CAAC;IAC7DC,qBAAqB,CAAC,IAAI,CAAC;IAC3B;EACF;EAEAC,eAAe,CAAC,IAAI,CAAC;EAErB,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBZ,IAAI,EAAED,QAAQ,CAACC,IAAI;QACnBC,KAAK,EAAEF,QAAQ,CAACE,KAAK;QACrBC,OAAO,EAAEH,QAAQ,CAACG;MACpB,CAAC;IACH,CAAC,CAAC;;IAEF;IACA,MAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAIC,IAAI;IACR,IAAI;MACFA,IAAI,GAAGD,IAAI,GAAGF,IAAI,CAACI,KAAK,CAACF,IAAI,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOhB,CAAC,EAAE;MACVmB,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEJ,IAAI,CAAC;MAC5C,MAAM,IAAIK,KAAK,CAAC,+BAA+B,CAAC;IAClD;IAEA,IAAI,CAACZ,QAAQ,CAACa,EAAE,EAAE;MAChB,MAAM,IAAID,KAAK,CAACJ,IAAI,CAACZ,OAAO,IAAI,yBAAyB,CAAC;IAC5D;IAEAkB,WAAW,CAAC;MAAEpB,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;IACjDC,sBAAsB,CAACW,IAAI,CAACZ,OAAO,IAAI,+BAA+B,CAAC;EACzE,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvCd,sBAAsB,CACpBc,KAAK,CAACf,OAAO,IAAI,oCACnB,CAAC;EACH,CAAC,SAAS;IACRE,qBAAqB,CAAC,IAAI,CAAC;IAC3BC,eAAe,CAAC,KAAK,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}