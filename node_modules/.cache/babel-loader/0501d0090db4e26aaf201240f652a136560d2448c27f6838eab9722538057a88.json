{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  const formDataToSend = {\n    name: formData.name,\n    email: formData.email,\n    message: formData.textarea\n  };\n  try {\n    const response = await fetch(\"http://localhost:5000/send-email\", {\n      // Atualize para a URL correta\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formDataToSend)\n    });\n    if (response.ok) {\n      setFormData({\n        name: \"\",\n        email: \"\",\n        textarea: \"\"\n      });\n      setStatus(\"Mensagem enviada com sucesso!\");\n      setMensagemNotificacao(\"Mensagem enviada com sucesso!\");\n      setNotificacaoVisivel(true);\n    } else {\n      setStatus(\"Algo deu errado. Tente novamente.\");\n      setMensagemNotificacao(\"Erro ao enviar. Tente novamente.\");\n      setNotificacaoVisivel(true);\n    }\n  } catch (error) {\n    console.error(\"Erro ao enviar:\", error);\n    setStatus(\"Erro na conex達o. Tente mais tarde.\");\n    setMensagemNotificacao(\"Erro na conex達o. Tente mais tarde.\");\n    setNotificacaoVisivel(true);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","formDataToSend","name","formData","email","message","textarea","response","fetch","method","headers","body","JSON","stringify","ok","setFormData","setStatus","setMensagemNotificacao","setNotificacaoVisivel","error","console"],"sources":["C:/Users/a464019/Documents/GitHub/portifolio-pessoal/src/componentes/forms/index.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  const formDataToSend = {\r\n    name: formData.name,\r\n    email: formData.email,\r\n    message: formData.textarea,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/send-email\", {  // Atualize para a URL correta\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(formDataToSend),\r\n    });\r\n\r\n    if (response.ok) {\r\n      setFormData({ name: \"\", email: \"\", textarea: \"\" });\r\n      setStatus(\"Mensagem enviada com sucesso!\");\r\n      setMensagemNotificacao(\"Mensagem enviada com sucesso!\");\r\n      setNotificacaoVisivel(true);\r\n    } else {\r\n      setStatus(\"Algo deu errado. Tente novamente.\");\r\n      setMensagemNotificacao(\"Erro ao enviar. Tente novamente.\");\r\n      setNotificacaoVisivel(true);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Erro ao enviar:\", error);\r\n    setStatus(\"Erro na conex達o. Tente mais tarde.\");\r\n    setMensagemNotificacao(\"Erro na conex達o. Tente mais tarde.\");\r\n    setNotificacaoVisivel(true);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,MAAMC,cAAc,GAAG;IACrBC,IAAI,EAAEC,QAAQ,CAACD,IAAI;IACnBE,KAAK,EAAED,QAAQ,CAACC,KAAK;IACrBC,OAAO,EAAEF,QAAQ,CAACG;EACpB,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAAG;MAClEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,cAAc;IACrC,CAAC,CAAC;IAEF,IAAIM,QAAQ,CAACO,EAAE,EAAE;MACfC,WAAW,CAAC;QAAEb,IAAI,EAAE,EAAE;QAAEE,KAAK,EAAE,EAAE;QAAEE,QAAQ,EAAE;MAAG,CAAC,CAAC;MAClDU,SAAS,CAAC,+BAA+B,CAAC;MAC1CC,sBAAsB,CAAC,+BAA+B,CAAC;MACvDC,qBAAqB,CAAC,IAAI,CAAC;IAC7B,CAAC,MAAM;MACLF,SAAS,CAAC,mCAAmC,CAAC;MAC9CC,sBAAsB,CAAC,kCAAkC,CAAC;MAC1DC,qBAAqB,CAAC,IAAI,CAAC;IAC7B;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvCH,SAAS,CAAC,oCAAoC,CAAC;IAC/CC,sBAAsB,CAAC,oCAAoC,CAAC;IAC5DC,qBAAqB,CAAC,IAAI,CAAC;EAC7B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}