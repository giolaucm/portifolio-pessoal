{"ast":null,"code":"import React,{useState}from\"react\";import\"../forms/styles.css\";import Notificacao from\"../alert/index\";import imgCopy from\"../img/not_copy.svg\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Form=()=>{const[formData,setFormData]=useState({name:\"\",email:\"\",textarea:\"\"});const[status,setStatus]=useState(null);const[notificacaoVisivel,setNotificacaoVisivel]=useState(false);const[mensagemNotificacao,setMensagemNotificacao]=useState(\"\");const[isSubmitting,setIsSubmitting]=useState(false);const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleSubmit=async e=>{e.preventDefault();setIsSubmitting(true);const formDataToSend={name:formData.name,email:formData.email,message:formData.textarea};try{const response=await fetch(\"/api/index.js\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(formDataToSend)});const data=await response.json();if(response.ok){setFormData({name:\"\",email:\"\",textarea:\"\"});setMensagemNotificacao(data.message||\"Mensagem enviada com sucesso!\");}else{setMensagemNotificacao(data.message||\"Erro ao enviar mensagem\");}}catch(error){console.error(\"Erro ao enviar:\",error);setMensagemNotificacao(\"Erro na conexão. Tente mais tarde.\");}finally{setNotificacaoVisivel(true);setIsSubmitting(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Nome\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",required:true,value:formData.name,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"E-mail\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",required:true,value:formData.email,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"textarea\",children:\"Como posso te ajudar?\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"textarea\",id:\"textarea\",rows:10,cols:50,required:true,value:formData.textarea,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"button\",{className:\"form-submit-btn\",type:\"submit\",disabled:isSubmitting,children:isSubmitting?\"Enviando...\":\"Enviar\"}),status&&/*#__PURE__*/_jsx(\"p\",{className:\"form-status\",children:status})]}),/*#__PURE__*/_jsx(Notificacao,{visivel:notificacaoVisivel,onFechar:()=>setNotificacaoVisivel(false),mensagem:mensagemNotificacao,imagem:imgCopy})]});};export default Form;","map":{"version":3,"names":["React","useState","Notificacao","imgCopy","jsx","_jsx","jsxs","_jsxs","Form","formData","setFormData","name","email","textarea","status","setStatus","notificacaoVisivel","setNotificacaoVisivel","mensagemNotificacao","setMensagemNotificacao","isSubmitting","setIsSubmitting","handleChange","e","target","value","handleSubmit","preventDefault","formDataToSend","message","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","console","className","children","onSubmit","htmlFor","type","id","required","onChange","rows","cols","disabled","visivel","onFechar","mensagem","imagem"],"sources":["C:/Users/a464019/Documents/GitHub/portifolio-pessoal/src/componentes/forms/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../forms/styles.css\";\r\nimport Notificacao from \"../alert/index\";\r\nimport imgCopy from \"../img/not_copy.svg\";\r\n\r\nconst Form = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    textarea: \"\",\r\n  });\r\n\r\n  const [status, setStatus] = useState(null);\r\n  const [notificacaoVisivel, setNotificacaoVisivel] = useState(false);\r\n  const [mensagemNotificacao, setMensagemNotificacao] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    const formDataToSend = {\r\n      name: formData.name,\r\n      email: formData.email,\r\n      message: formData.textarea,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"/api/index.js\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formDataToSend),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setFormData({ name: \"\", email: \"\", textarea: \"\" });\r\n        setMensagemNotificacao(data.message || \"Mensagem enviada com sucesso!\");\r\n      } else {\r\n        setMensagemNotificacao(data.message || \"Erro ao enviar mensagem\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar:\", error);\r\n      setMensagemNotificacao(\"Erro na conexão. Tente mais tarde.\");\r\n    } finally {\r\n      setNotificacaoVisivel(true);\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Nome</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            required\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">E-mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            required\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"textarea\">Como posso te ajudar?</label>\r\n          <textarea\r\n            name=\"textarea\"\r\n            id=\"textarea\"\r\n            rows={10}\r\n            cols={50}\r\n            required\r\n            value={formData.textarea}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button \r\n          className=\"form-submit-btn\" \r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n        >\r\n          {isSubmitting ? \"Enviando...\" : \"Enviar\"}\r\n        </button>\r\n        {status && <p className=\"form-status\">{status}</p>}\r\n      </form>\r\n\r\n      <Notificacao\r\n        visivel={notificacaoVisivel}\r\n        onFechar={() => setNotificacaoVisivel(false)}\r\n        mensagem={mensagemNotificacao}\r\n        imagem={imgCopy}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}